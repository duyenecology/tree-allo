---
title: "Extracting species-specific paramters"
author: "Nguyen Thi Duyen"
date: "`r format(Sys.time(), '%B %d, %Y')`"
fontsize: 12pt
format:
  html:
    theme: coderpro
    toc: true
    toc-depth: 2
    number-sections: true
    smooth-scroll: true
    standalone: true
    embed-resources: true
---


```{r setup, include=FALSE}
knitr::opts_knit$set(root.dir = "/workspaces/tree-allometry")
```

```{r global_options, include=FALSE}
library(knitr)
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  message = FALSE,
  cache = FALSE,
  fig.align = "center",
  fig.show = "hold"
)
```

```{r, include=FALSE}
library(targets)
library(tidyverse)
library(scales)
```

# Species id

```{r}
tallo_wd_df_200 <- tar_read(tallo_wd_df_200)
data2 <- tallo_wd_df_200 |>
    filter(!is.na(dbh)) |>
    filter(!is.na(cr)) |>
    filter(!is.na(h)) |>
    filter(!is.na(wd_s))

wd_df <- data2 |>
    group_by(sp) |>
    summarize(wd = mean(wd)) |>
    mutate(wd_s = scale(wd) |> as.numeric())

wd_df

wd_df <- wd_df |>
  mutate(sp_id = 1:n()) |>
  select(-wd_s)
wd_df


```

# Extracting species-specific parameters 

```{r}
options(width = 200)
source("R/functions.R")

# Best H model
wb_nou_h <- tar_read(fit_nlr_summary_weibull1_nou_h)
gamma_nou_h <- wb_nou_h |> filter(str_detect(variable, "^gamma\\["))
beta_nou_h <- wb_nou_h |> filter(str_detect(variable, "^beta\\["))

# Pl H model

pl_nou_h <- tar_read(fit_lr2_summary_power_law1_nou_h)
gamma_nou_pl_h <- pl_nou_h |> filter(str_detect(variable, "^gamma\\["))
beta_nou_pl_h <- pl_nou_h |> filter(str_detect(variable, "^beta\\["))
gamma_nou_pl_h
beta_nou_pl_h

# Best CR model
wb_nou_cr <- tar_read(fit_nlr_summary_weibull1_nou_cr)
gamma_nou_cr <- wb_nou_cr |> filter(str_detect(variable, "^gamma\\["))
beta_nou_cr <- wb_nou_cr |> filter(str_detect(variable, "^beta\\["))

# Best DBH model
pl_nou_dbh <- tar_read(fit_lr2_summary_power_law1_nou_dbh)
gamma_dbh <- pl_nou_dbh |> filter(str_detect(variable, "^gamma\\["))
beta_dbh <- pl_nou_dbh |> filter(str_detect(variable, "^beta\\["))

species_specific_df <- generate_species_posterior_df(wb_nou_h, wb_nou_cr, pl_nou_dbh)
head(species_specific_df)
dim(species_specific_df)



cr_df <- species_specific_df |> filter(Dependent_variable == "Crown Radius")
h_df <- species_specific_df |> filter(Dependent_variable == "Tree Height")
dbh_df <- species_specific_df |> filter(Dependent_variable == "DBH")

# Crown Radius
cr_df_a <- cr_df |> filter(Parameter == "a")
cr_df_b <- cr_df |> filter(Parameter == "b")
cr_df_k <- cr_df |> filter(Parameter == "k")
cr_df <- data.frame(
  sp_id = seq_along(cr_df_a$CIs),  
  a = cr_df_a$CIs,
  b = cr_df_b$CIs,
  k = cr_df_k$CIs
)

# Tree Height
h_df_a <- h_df |> filter(Parameter == "a")
h_df_b <- h_df |> filter(Parameter == "b")
h_df_k <- h_df |> filter(Parameter == "k")
h_df <- data.frame(
  sp_id = seq_along(h_df_a$CIs),  
  a = h_df_a$CIs,
  b = h_df_b$CIs,
  k = h_df_k$CIs
)

# DBH
dbh_df_a <- dbh_df |> filter(Parameter == "a")
dbh_df_b <- dbh_df |> filter(Parameter == "b")
dbh_df_c <- dbh_df |> filter(Parameter == "c")
dbh_df <- data.frame(
  sp_id = seq_along(dbh_df_a$CIs),  
  a = dbh_df_a$CIs,
  b = dbh_df_b$CIs,
  c = dbh_df_c$CIs
)

posterior_df <- bind_rows(
  cr_df |> mutate(Dependent_variable = "Crown Radius", c = "-", k = k), 
  h_df |> mutate(Dependent_variable = "Tree Height", c = "-", k = k),
  dbh_df |> mutate(Dependent_variable = "DBH", k = "-", c = c)
)

posterior_df <- sp_df |> select(sp, Dependent_variable, everything())

head(posterior_df)
```

# Posterior df
```{r}
options(width = 150)
posterior_df <- posterior_df |> 
  mutate(sp_id = as.numeric(sp_id))

head(posterior_df)
wd_df

sp_posterior_df <- posterior_df |>
  left_join(wd_df, by = "sp_id") |>
  select(sp_id, sp, Dependent_variable, a, b, k, c, wd)

head(sp_posterior_df)
```

# Cheking the df of each variables

```{r}
# Split into three data frames
cr_df <- sp_posterior_df |> filter(Dependent_variable == "Crown Radius")
h_df <- sp_posterior_df |> filter(Dependent_variable == "Tree Height")
dbh_df <- sp_posterior_df |> filter(Dependent_variable == "DBH")
h_pl_df <- sp_posterior_df |> filter(Dependent_variable == "Tree Height")

head(cr_df)
head(h_df)
head(dbh_df)


options(width = 150)
tallo_wd_df_200 <- tar_read(tallo_wd_df_200)
wb_nou_h <- tar_read(fit_nlr_summary_weibull1_nou_h)
pl_nou_h <- tar_read(fit_lr2_summary_power_law1_nou_h)
wb_nou_cr <- tar_read(fit_nlr_summary_weibull1_nou_cr)
pl_nou_dbh <- tar_read(fit_lr2_summary_power_law1_nou_dbh)

pl_nou_dbh2 <- tar_read(fit_lr2_summary_power_law1_nou_dbh2)
pl_nou_dbh3 <- tar_read(fit_lr2_summary_power_law1_nou_dbh2)
pl_nou_dbh2
pl_nou_dbh3

# source("R/functions.R")
sp_posterior_df <- generate_sp_posterior_df(wb_nou_h, wb_nou_cr, pl_nou_dbh, pl_nou_h, tallo_wd_df_200)

head(sp_posterior_df)
dim(sp_posterior_df)




sp_posterior_df <- tar_read(sp_posterior_df)
head(sp_posterior_df)
summary(sp_posterior_df)


# Split into 4 data frames
cr_df <- sp_posterior_df |> filter(Dependent_variable == "Crown Radius")
h_df <- sp_posterior_df |> filter(Dependent_variable == "Tree Height")
dbh_df <- sp_posterior_df |> filter(Dependent_variable == "DBH")
h_pl_df <- sp_posterior_df |> 
  filter(Dependent_variable == "Tree Height", is.na(k))


head(cr_df)
head(h_df)
head(dbh_df)
head(h_pl_df)

dim(h_pl_df)


```

