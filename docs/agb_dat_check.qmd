---
title: "Angiosperms' AGB data checking
author: "Nguyen Thi Duyen"
date: "`r format(Sys.time(), '%B %d, %Y')`"
fontsize: 12pt
format:
  html:
    theme: cosmo
    toc: true
    toc-depth: 2
    number-sections: true
    smooth-scroll: true
    standalone: true
    embed-resources: true
---

```{r global_options, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning = TRUE, message = TRUE)
knitr::opts_knit$set(root.dir = here::here())
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  message = FALSE,
  cache = FALSE,
  fig.align = "center",
  fig.show = "hold"
)

```

```{r include=FALSE}
library(tidyverse)
library(here)
library(targets)
options(width=200)
library(ggplot2)
```

```{r}
tallo_wd_df0 <- tar_read(tallo_wd_df0)
tallo_wd_df0
colnames(tallo_wd_df0)

sp_posterior_agb_df <- tar_read(sp_posterior_agb_df)

tallo_wd_df <- tallo_wd_df0 |>
    filter(!is.na(wd)) |>
    # filter( dbh >= 5) |>
    mutate(log_dbh = log(dbh),
           log_h = log(h),
           log_cr = log(cr),
           log_wd = log(wd)) |>
    filter(!is.na(log_dbh), !is.na(log_cr), !is.na(log_h), !is.na(log_wd)) |>
    dplyr::select(tree_id, division, biome, sp, dbh, h, cr, wd, log_dbh, log_h, log_cr, log_wd) |>
    filter( dbh >= 5) |>
    group_by(sp) |>
    filter(n() >= 20) |>
    ungroup()
  
tallo_wd_ang <- tallo_wd_df |>
  filter(division == "Angiosperm")

# Posterior data into Angiosperms
sp_posterior_ang <- sp_posterior_agb_df |> filter(Division == "Angiosperm")

filter_common_species <- function(tallo_wd_df, sp_posterior_agb_df) {
  h_wb_df <- sp_posterior_agb_df |>
  filter(Dependent_variable == "Tree Height", !is.na(a), !is.na(b),!is.na(k)) |>
    dplyr::select(sp, a, b, k) |>
    distinct()

  h_pl_df <- sp_posterior_agb_df |>
    filter(Dependent_variable == "Tree Height", is.na(k)) |>
    dplyr::select(sp, a, b) |>
    distinct()

  dbh_df <- sp_posterior_agb_df |>
    filter(Dependent_variable == "DBH", !is.na(a), !is.na(b), !is.na(c)) |>
    dplyr::select(sp, a, b, c) |>
    distinct()

  dbh1_df <- sp_posterior_agb_df |>
    filter(Dependent_variable == "DBH1") |>
    dplyr::select(sp, a, b) |>
    distinct()

  dbh2_df <- sp_posterior_agb_df |>
    filter(Dependent_variable == "DBH2") |>
    dplyr::select(sp, a, b) |>
    distinct()

  dbh3_df <- sp_posterior_agb_df |>
    filter(Dependent_variable == "DBH3") |>
    dplyr::select(sp, a, b) |>
    distinct()

  common_species <- Reduce(intersect, list(
    tallo_wd_df$sp,
    h_wb_df$sp,
    h_pl_df$sp,
    dbh_df$sp,
    dbh1_df$sp,
    dbh2_df$sp,
    dbh3_df$sp
  ))

  list(
    filtered_tallo_wd_df = tallo_wd_df |> filter(sp %in% common_species),
    filtered_h_wb_df = h_wb_df |> filter(sp %in% common_species),
    filtered_h_pl_df = h_pl_df |> filter(sp %in% common_species),
    filtered_dbh_df = dbh_df |> filter(sp %in% common_species),
    filtered_dbh1_df = dbh1_df |> filter(sp %in% common_species),
    filtered_dbh2_df = dbh2_df |> filter(sp %in% common_species),
    filtered_dbh3_df = dbh3_df |> filter(sp %in% common_species),
    num_species = length(common_species),
    num_trees = tallo_wd_df |> filter(sp %in% common_species) |> nrow()

  )
}

# Filter common species for Angiosperms and Gymnosperms
filtered_ang <- filter_common_species(tallo_wd_ang, sp_posterior_ang)

calculate_agb <- function(filtered_data) {
    tallo_wd_df <- filtered_data$filtered_tallo_wd_df
    agb_df <- tallo_wd_df |>
      left_join(
        filtered_data$filtered_h_wb_df |> rename(a_h_wb = a, b_h_wb = b, k_h_wb = k),
        by = "sp"
      ) |>
      left_join(
        filtered_data$filtered_h_pl_df |> rename(a_h_pl = a, b_h_pl = b),
        by = "sp"
      ) |>
      left_join(
        filtered_data$filtered_dbh_df |> rename(a_dbh = a, b_dbh = b, c_dbh = c),
        by = "sp"
      ) |>
      left_join(
        filtered_data$filtered_dbh1_df |> rename(a_dbh1 = a, b_dbh1 = b),
        by = "sp"
      ) |>
      left_join(
        filtered_data$filtered_dbh2_df |> rename(a_dbh2 = a, b_dbh2 = b),
        by = "sp"
      ) |>
      left_join(
        filtered_data$filtered_dbh3_df |> rename(a_dbh3 = a, b_dbh3 = b),
        by = "sp"
      )

    # Calculate the log_AGB based on various models
    agb_df <- agb_df |>
      mutate(
        a_h_wb = as.numeric(gsub(" \\(.*\\)", "", a_h_wb)),
        b_h_wb = as.numeric(gsub(" \\(.*\\)", "", b_h_wb)),
        k_h_wb = as.numeric(gsub(" \\(.*\\)", "", k_h_wb)),
        a_h_pl = as.numeric(gsub(" \\(.*\\)", "", a_h_pl)),
        b_h_pl = as.numeric(gsub(" \\(.*\\)", "", b_h_pl)),
        a_dbh = as.numeric(gsub(" \\(.*\\)", "", a_dbh)),
        b_dbh = as.numeric(gsub(" \\(.*\\)", "", b_dbh)),
        c_dbh = as.numeric(gsub(" \\(.*\\)", "", c_dbh)),
        a_dbh1 = as.numeric(gsub(" \\(.*\\)", "", a_dbh1)),
        b_dbh1 = as.numeric(gsub(" \\(.*\\)", "", b_dbh1)),
        a_dbh2 = as.numeric(gsub(" \\(.*\\)", "", a_dbh2)),
        b_dbh2 = as.numeric(gsub(" \\(.*\\)", "", b_dbh2)),
        a_dbh3 = as.numeric(gsub(" \\(.*\\)", "", a_dbh3)),
        b_dbh3 = as.numeric(gsub(" \\(.*\\)", "", b_dbh3))
      ) |>
      mutate(
        # Updated baseline AGB calculation with new equation
        log_AGB_bl = log(0.0673) + 0.976 * (log_wd + 2 * log_dbh + log_h),
        
        height_wb = a_h_wb * (1 - exp(-b_h_wb * dbh^k_h_wb)),    # Weibull-based height estimation
        log_AGB_wb_h = log(0.0673) + 0.976 * (log_wd + 2 * log_dbh + log(height_wb)),  # Biomass from Weibull height
        
        height_pl = a_h_pl * dbh^b_h_pl,  # Power-law height estimation
        log_AGB_pl_h = log(0.0673) + 0.976 * (log_wd + 2 * log_dbh + log(height_pl)),  # Biomass from Power-law height
        
        dbh_pl = a_dbh * (cr^b_dbh) * (h^c_dbh),  # Power-law DBH estimation using CR and H
        log_AGB_pl_dbh = log(0.0673) + 0.976 * (log_wd + 2 * log(dbh_pl) + log_h),  # Biomass from Power-law DBH
        
        dbh_pl1 = a_dbh1 * (cr * h)^b_dbh1,  # Power-law DBH estimation using CR*H
        log_AGB_pl_dbh1 = log(0.0673) + 0.976 * (log_wd + 2 * log(dbh_pl1) + log_h),  # Biomass from Power-law DBH1
        
        dbh_pl2 = a_dbh2 * (cr^b_dbh2),  # Power-law DBH estimation using CR only
        log_AGB_pl_dbh2 = log(0.0673) + 0.976 * (log_wd + 2 * log(dbh_pl2) + log_h),  # Biomass from Power-law DBH2
        
        dbh_pl3 = a_dbh3 * (h^b_dbh3),  # Power-law DBH estimation using H only
        log_AGB_pl_dbh3 = log(0.0673) + 0.976 * (log_wd + 2 * log(dbh_pl3) + log_h)  # Biomass from Power-law DBH3
      )

    return(agb_df)
  }

# Calculate AGB for Angiosperms
agb_ang <- calculate_agb(filtered_ang)

```

```{r}
agb_ang
summary(agb_ang)

# agb_ang <- agb_ang |>
#   mutate(basal_area = pi * (dbh / 2)^2)

large_tree <- agb_ang |>
  filter(dbh >=  70)

num_trees_large_dbh <- nrow(large_tree)

percent_large_dbh <- (num_trees_large_dbh / nrow(agb_ang)) * 100

total_biomass <- sum(agb_ang$log_AGB_bl, na.rm = TRUE)

large_tree_biomass <- sum(large_tree$log_AGB_bl, na.rm = TRUE)

percent_biomass_large_trees <- (large_tree_biomass / total_biomass) * 100

num_trees_large_dbh
percent_large_dbh
large_tree_biomass
total_biomass
percent_biomass_large_trees


```

# Collinearity checking

```{r}
tallo_reduced_lr_df_ang_dbh <- tar_read(tallo_reduced_lr_df_ang_dbh)

cor(tallo_reduced_lr_df_ang_dbh$h, tallo_reduced_lr_df_ang_dbh$cr, use = "complete.obs")

ggplot(tallo_reduced_lr_df_ang_dbh, aes(x = h, y = cr)) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "lm", col = "blue") +
  labs(title = "Scatterplot of Height vs Crown Radius",
       x = "Tree Height (h)",
       y = "Crown Radius (cr)")

```